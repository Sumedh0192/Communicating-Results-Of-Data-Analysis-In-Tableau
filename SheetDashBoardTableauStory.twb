<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' filename='B:/UB Stuff/Semester 2!/DIC/Term Project/Worldbankdata.xlsx' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.152642' measure-ordering='alphabetic' measure-percentage='0.847358' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='B:/UB Stuff/Semester 2!/DIC/Term Project/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.152642' measure-ordering='alphabetic' measure-percentage='0.847358' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42012.950994398147].[Longitude (generated)]' field-type='quantitative' max='28424272.637096398' min='-16857706.773290433' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.42012.950994398147].[Latitude (generated)]' field-type='quantitative' max='33938239.188482948' min='-35983831.687514797' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5079' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5079' />
            <zone h='83210' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16375'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WorldData'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
      e/4AtcPpr6Nl+sUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
      Na5rowAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
